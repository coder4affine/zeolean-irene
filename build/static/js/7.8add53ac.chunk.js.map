{"version":3,"sources":["component/TextInput/index.js","component/DropDown/index.js","screens/Users/index.js"],"names":["index","_ref","field","_ref$form","form","touched","errors","title","props","Object","objectWithoutProperties","react_default","a","createElement","style","display","flex","flexDirection","margin","htmlFor","assign","type","name","data","value","map","item","key","id","concat","firstName","lastName","formData","component","CoursesSchema","object","shape","string","min","max","required","watchHref","authors","course","addCourse","closeDialog","formik_esm","enableReinitialize","initialValues","validationSchema","onSubmit","_ref2","asyncToGenerator","regenerator_default","mark","_callee","values","actions","wrap","_context","prev","next","then","stop","_x","_x2","apply","this","arguments","render","_ref3","handleSubmit","isSubmitting","console","log","apiFail","TextInput","DropDown","disabled"],"mappings":"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","file":"static/js/7.8add53ac.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst index = ({ field, form: { touched, errors }, title, ...props }) => {\n  return (\n    <div style={{ display: 'flex', flex: 1, flexDirection: 'column', margin: 10 }}>\n      <label htmlFor=\"title\">{title}</label>\n      <input type=\"text\" {...field} {...props} />\n      {errors.name && touched.name && <div>{errors.name}</div>}\n    </div>\n  );\n};\n\nindex.propTypes = {\n  field: PropTypes.object.isRequired,\n  form: PropTypes.object.isRequired,\n  title: PropTypes.string.isRequired,\n};\n\nexport default index;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst index = ({ field, form: { touched, errors }, data, title, ...props }) => {\n  return (\n    <div style={{ display: 'flex', flex: 1, flexDirection: 'column', margin: 10 }}>\n      <label htmlFor=\"title\">{title}</label>\n      <select {...field} {...props}>\n        <option value=\"\">Select Author</option>\n        {data &&\n          data.map(item => (\n            <option key={item.id} value={item.id}>{`${item.firstName} ${item.lastName}`}</option>\n          ))}\n      </select>\n      {errors.name && touched.name && <div>{errors.name}</div>}\n    </div>\n  );\n};\n\nindex.propTypes = {\n  field: PropTypes.object.isRequired,\n  form: PropTypes.object.isRequired,\n  title: PropTypes.string.isRequired,\n};\n\nexport default index;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Formik, Field } from 'formik';\nimport { string, object } from 'yup';\nimport TextInput from '../../component/TextInput';\nimport DropDown from '../../component/DropDown';\n\n// https://github.com/jaredpalmer/formik\n\n// https://github.com/erikras/redux-form\n\n// https://www.npmjs.com/package/yup\n\nconst formData = [\n  {\n    id: 1,\n    name: 'title',\n    title: 'Title',\n    component: 'text',\n  },\n  {\n    id: 2,\n    name: 'watchHref',\n    title: 'Link',\n    component: 'text',\n  },\n  {\n    id: 3,\n    name: 'category',\n    title: 'Category',\n    component: 'text',\n  },\n  {\n    id: 4,\n    name: 'length',\n    title: 'Length',\n    component: 'text',\n  },\n  {\n    id: 5,\n    name: 'authorId',\n    title: 'Author',\n    component: 'select',\n  },\n];\n\nconst CoursesSchema = object().shape({\n  title: string()\n    .min(5, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n  watchHref: string()\n    .min(2, 'Too Short!')\n    .max(200, 'Too Long!')\n    .required('Required'),\n});\n\nconst index = ({ authors, course, addCourse, closeDialog }) => {\n  return (\n    <div>\n      <h2>Add Courses</h2>\n      <Formik\n        enableReinitialize\n        initialValues={course}\n        validationSchema={CoursesSchema}\n        // validate={values => {\n        //   let errors = {};\n        //   if (!values.title) {\n        //     errors.title = \"Required\";\n        //   }\n        //   if (!values.watchHref) {\n        //     errors.watchHref = \"Required\";\n        //   }\n        //   if (!values.length) {\n        //     errors.length = \"Required\";\n        //   }\n        //   if (!values.category) {\n        //     errors.category = \"Required\";\n        //   }\n        //   return errors;\n        // }}\n        onSubmit={async (values, actions) => {\n          addCourse(values, actions).then(closeDialog);\n        }}\n        render={({ handleSubmit, isSubmitting, errors }) => {\n          console.log(errors);\n          return (\n            <form onSubmit={handleSubmit} style={{ display: 'flex', flexDirection: 'column' }}>\n              <span>{errors.apiFail}</span>\n              {formData.map(item => (\n                <Field\n                  key={item.id}\n                  name={item.name}\n                  title={item.title}\n                  data={item.component === 'select' ? authors : null}\n                  component={item.component === 'text' ? TextInput : DropDown}\n                />\n              ))}\n\n              <input\n                type=\"submit\"\n                value={course.id ? 'Edit Course' : 'Save Course'}\n                disabled={isSubmitting}\n              />\n            </form>\n          );\n        }}\n      />\n    </div>\n  );\n};\n\nindex.propTypes = {\n  authors: PropTypes.array.isRequired,\n  course: PropTypes.object.isRequired,\n  addCourse: PropTypes.func.isRequired,\n  closeDialog: PropTypes.func.isRequired,\n};\n\nexport default index;\n"],"sourceRoot":""}