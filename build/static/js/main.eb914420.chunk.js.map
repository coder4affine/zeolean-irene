{"version":3,"sources":["context/localeContext.js","context/themeContext.js","App.js","serviceWorker.js","reducers/localeReducer.js","reducers/themeReducer.js","reducers/authorsReducer.js","reducers/coursesReducer.js","reducers/index.js","index.js","configureStore.js","constants/actionTypes.js"],"names":["React","createContext","Provider","LocaleConsumer","Consumer","localeContext","state","locale","changeLocale","_this","setState","children","this","props","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","value","Component","ThemeConsumer","themeContext","theme","changeTheme","AsyncHome","loadable","Promise","all","__webpack_require__","e","then","bind","fallback","react_default","AsyncUsers","AsyncAbout","AsyncNoMatch","App","react_router_dom","activeStyle","color","exact","to","react_router","path","render","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","initialState","loading","authors","courses","combineReducers","arguments","length","undefined","_ref","type","payload","Object","objectSpread","types","concat","toConsumableArray","store","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","thunk","configureStore","ReactDOM","react","es","src_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","d","__webpack_exports__","LOAD_COURSES","LOAD_AUTHORS","LOAD_COURSES_SUCCESS","LOAD_AUTHORS_SUCCESS","LOAD_COURSES_FAIL","LOAD_AUTHORS_FAIL","SAVE_COURSE","SAVE_COURSE_SUCCESS","SAVE_COURSE_FAIL","UPDATE_COURSE","UPDATE_COURSE_SUCCESS","UPDATE_COURSE_FAIL"],"mappings":"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","file":"static/js/main.eb914420.chunk.js","sourcesContent":["/* eslint-disable react/no-unused-state */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const { Provider, Consumer: LocaleConsumer } = React.createContext();\n\nexport default class localeContext extends Component {\n  static propTypes = {\n    children: PropTypes.element.isRequired,\n  };\n\n  state = {\n    locale: 'en',\n    changeLocale: locale => this.setState({ locale }),\n  };\n\n  render() {\n    const { children } = this.props;\n    return <Provider value={this.state}>{children}</Provider>;\n  }\n}\n","/* eslint-disable react/no-unused-state */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const { Provider, Consumer: ThemeConsumer } = React.createContext();\n\nexport default class themeContext extends Component {\n  static propTypes = {\n    children: PropTypes.element.isRequired,\n  };\n\n  state = {\n    theme: 'dark',\n    changeTheme: theme => this.setState({ theme }),\n  };\n\n  render() {\n    const { children } = this.props;\n    return <Provider value={this.state}>{children}</Provider>;\n  }\n}\n","import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\nimport { BrowserRouter as Router, Route, NavLink, Switch } from 'react-router-dom';\nimport loadable from '@loadable/component';\nimport LocaleContext from './context/localeContext';\nimport ThemeContext from './context/themeContext';\n// import PrivateRoute from './component/PrivateRoute';\n\nconst AsyncHome = loadable(() => import('./screens/Home'), {\n  fallback: <div>Loading...</div>,\n});\nconst AsyncUsers = loadable(() => import('./screens/Users'), {\n  fallback: <div>Loading...</div>,\n});\nconst AsyncAbout = loadable(() => import('./screens/About'), {\n  fallback: <div>Loading...</div>,\n});\nconst AsyncNoMatch = loadable(() => import('./screens/NoMatch'), {\n  fallback: <div>Loading...</div>,\n});\n\nclass App extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <nav>\n            <ul>\n              <NavLink\n                activeStyle={{\n                  color: 'red',\n                }}\n                exact\n                to=\"/\"\n              >\n                Home\n              </NavLink>\n            </ul>\n            <ul>\n              <NavLink\n                activeStyle={{\n                  color: 'red',\n                }}\n                to=\"/users\"\n              >\n                Users\n              </NavLink>\n            </ul>\n            <ul>\n              <NavLink\n                activeStyle={{\n                  color: 'red',\n                }}\n                to=\"/about\"\n              >\n                About\n              </NavLink>\n            </ul>\n          </nav>\n          <ThemeContext>\n            <LocaleContext>\n              <Switch>\n                <Route path=\"/\" exact render={props => <AsyncHome {...props} />} />\n                <Route path=\"/users\" render={props => <AsyncUsers {...props} />} />\n                <Route path=\"/about\" render={props => <AsyncAbout {...props} />} />\n                <Route render={() => <AsyncNoMatch />} />\n              </Switch>\n            </LocaleContext>\n          </ThemeContext>\n        </div>\n      </Router>\n    );\n  }\n}\n\nApp.propTypes = {};\n\nexport default App;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n  locale: 'en',\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case 'CHANGE_LOCALE':\n      return { ...state, ...payload };\n\n    default:\n      return state;\n  }\n};\n","const initialState = {\n  theme: 'dark',\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case 'CHANGE_THEME':\n      return { ...state, ...payload };\n\n    default:\n      return state;\n  }\n};\n","import * as types from '../constants/actionTypes';\n\nconst initialState = {\n  loading: false,\n  authors: [],\n  error: false,\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case types.LOAD_AUTHORS:\n      return { ...state, loading: true };\n\n    case types.LOAD_AUTHORS_SUCCESS:\n      return { ...state, loading: false, authors: payload };\n\n    case types.LOAD_AUTHORS_FAIL:\n      return { ...state, loading: false, error: payload };\n\n    default:\n      return state;\n  }\n};\n","import * as types from '../constants/actionTypes';\n\nconst initialState = {\n  loading: false,\n  courses: [],\n  error: false,\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case types.LOAD_COURSES:\n      return { ...state, loading: true };\n\n    case types.LOAD_COURSES_SUCCESS:\n      return { ...state, loading: false, courses: payload };\n\n    case types.SAVE_COURSE_FAIL:\n    case types.UPDATE_COURSE_FAIL:\n    case types.LOAD_AUTHORS_FAIL:\n      console.log(payload);\n      return { ...state, loading: false, error: payload };\n\n    case types.SAVE_COURSE_SUCCESS:\n      return { ...state, loading: false, courses: [...state.courses, payload] };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport locale from './localeReducer';\nimport theme from './themeReducer';\nimport authors from './authorsReducer';\nimport courses from './coursesReducer';\n\nexport default combineReducers({\n  locale,\n  theme,\n  authors,\n  courses,\n});\n","import React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\n// import Todo from \"./Todo\";\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './configureStore';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nserviceWorker.register();\n","/* eslint-disable no-underscore-dangle */\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n// import logger from 'redux-logger';\nimport rootReducer from './reducers';\n\nconst configureStore = () => {\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n  return store;\n};\n\nexport default configureStore;\n","export const LOAD_COURSES = 'LOAD_COURSES';\nexport const LOAD_AUTHORS = 'LOAD_AUTHORS';\nexport const LOAD_COURSES_SUCCESS = 'LOAD_COURSES_SUCCESS';\nexport const LOAD_AUTHORS_SUCCESS = 'LOAD_AUTHORS_SUCCESS';\nexport const LOAD_COURSES_FAIL = 'LOAD_COURSES_FAIL';\nexport const LOAD_AUTHORS_FAIL = 'LOAD_AUTHORS_FAIL';\n\nexport const SAVE_COURSE = 'SAVE_COURSE';\nexport const SAVE_COURSE_SUCCESS = 'SAVE_COURSE_SUCCESS';\nexport const SAVE_COURSE_FAIL = 'SAVE_COURSE_FAIL';\n\nexport const UPDATE_COURSE = 'UPDATE_COURSE';\nexport const UPDATE_COURSE_SUCCESS = 'UPDATE_COURSE_SUCCESS';\nexport const UPDATE_COURSE_FAIL = 'UPDATE_COURSE_FAIL';\n"],"sourceRoot":""}